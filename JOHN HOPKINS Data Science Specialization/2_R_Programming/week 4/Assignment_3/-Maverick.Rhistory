outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
head(outcome)
outcome[, 11] <- as.numeric(outcome[, 11])
hist(outcome[, 11])
hist(outcome[, 11], 20)
hist(outcome[, 11], 50)
outcome[, 7]
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
head(outcome)
View(outcome)
outcome$Hospital.Name
outcome$State
y <- (outcome$State == "TX")
y
q <- outcome[y == TRUE, ]
q
View(q)
q$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack
min(q$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)
State <- "TX"
z <- outcome[(outcome$State == State) == TRUE, ]
z
min(z$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)
r <- outcome[, z$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack == 12.0]
View(r)
r <- outcome[z$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack == 12.0, ]
View(r)
z$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack == 12.0
min(z$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)
class(min(z$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack))
z$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack == "12.0"
r <- outcome[z$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack == "12.0", ]
r <- outcome[ ,z$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack == "12.0" ]
r <- outcome[ ,z$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack == "12.0"]
r <- outcome[ , z$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack == "12.0"]
r <- outcome[z$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack == "12.0", ]
z$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack == "12.0"
z[ , z$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack == "12.0"]
r <- z$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack == "12.0"
z[ , r == TRUE]
z[ r == TRUE, ]
v <- z[ r == TRUE, ]
View(v)
state <- (outcome$State == "TX")
statehospitals <- outcome[(outcome$State == State) == TRUE, ]
heartAttack_minvalue <- min(statehospitals$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)
heartAttack_minvalue
r <- statehospitals$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack == heartAttack_minvalue
v <- z[ r == TRUE, ]
hospitalList <- statehospitals$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack == heartAttack_minvalue
hosp <- z[ hospitalList == TRUE, ]
hosp$Hospital.Name
outcome$State == "BB"
is.name("BB") NULL
is.name("BB")
outcome.State("BB")
outcome.State == "BB"
outcome$State == "BB"
(outcome$State == "BB") == TRUE
state <- (outcome$State == "TX")
col <- data$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack
col <- "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"
min(statehospitals$col)
data<- read.csv("outcome-of-care-measures.csv", colClasses = "character")
col <- data$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack
state <- (outcome$State == "TX")
statehospitals <- outcome[(outcome$State == State) == TRUE, ]
col <- statehospitals$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack
heartAttack_minvalue <- min(col)
heartAttack_minvalue
hospitalList <- col == heartAttack_minvalue
hospital <- hospitalList[ hospitalList == TRUE, ]
hospital <- data[ hospitalList == TRUE, ]
ls()
ls
data<- read.csv("outcome-of-care-measures.csv", colClasses = "character")
statehospitals <- data[(data$State == State) == TRUE, ]
statehospitals <- outcome[(outcome$State == State) == TRUE, ]
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
state <- (data$State == "TX")
statehospitals <- data[(data$State == State) == TRUE, ]
statehospitals <- outcome[(outcome$State == State) == TRUE, ]
statehospitals <- outcome[(data$State == State) == TRUE, ]
statehospitals <- outcome[(data$State == State) == TRUE, ]
data$State == State
statehospitals <- data[(data$State == state) == TRUE, ]
col <- statehospitals$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack
heartAttack_minvalue <- min(col)
state <- (data$State == "TX")
statehospitals <- data[(data$State == state) == TRUE, ]
statehospitals <- data[(data$State == state) == TRUE, ]
data$State == state
outcome$State
data$State
state <- (data$State == "TX")
state
statehospitals <- data[(data$State == state) == TRUE, ]
statehospitals <- data[ ,(data$State == state) == TRUE]
statehospitals <- data[ (data$State == state) == TRUE, ]
y <- data$State == state
statehospitals <- data[ ,y == TRUE]
statehospitals <- data[ y == TRUE, ]
y
state <- (data$State == "TX")
state
statehospitals <- data[ ,state == TRUE]
statehospitals <- data[ state == TRUE, ]
state <- "TX"
statehospitals <- data[ (data$State == state) == TRUE, ]
col <- statehospitals$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack
heartAttack_minvalue <- min(col)
hospitalList <- col == heartAttack_minvalue
hospitalList == TRUE
hospital <- statehospitals[ hospitalList == TRUE, ]
debugSource('C:/Users/bhunkeler/OneDrive/Dokumente/Coursera_Courses/Data Science/002_R Programming/Week 4/Assignment_3/main.R')
debugSource('C:/Users/bhunkeler/OneDrive/Dokumente/Coursera_Courses/Data Science/002_R Programming/Week 4/Assignment_3/main.R')
debugSource('C:/Users/bhunkeler/OneDrive/Dokumente/Coursera_Courses/Data Science/002_R Programming/Week 4/Assignment_3/main.R')
debugSource('C:/Users/bhunkeler/OneDrive/Dokumente/Coursera_Courses/Data Science/002_R Programming/Week 4/Assignment_3/main.R')
hospital$Name
hospital
hospital[Hospital.Name]
hospital$Hospital.Name
debugSource('C:/Users/bhunkeler/OneDrive/Dokumente/Coursera_Courses/Data Science/002_R Programming/Week 4/Assignment_3/main.R')
hospital
debugSource('C:/Users/bhunkeler/OneDrive/Dokumente/Coursera_Courses/Data Science/002_R Programming/Week 4/Assignment_3/main.R')
hostpitalList
hospitalList
View(statehospitals)
View(statehospitals)
debugSource('C:/Users/bhunkeler/OneDrive/Dokumente/Coursera_Courses/Data Science/002_R Programming/Week 4/Assignment_3/main.R')
debugSource('C:/Users/bhunkeler/OneDrive/Dokumente/Coursera_Courses/Data Science/002_R Programming/Week 4/Assignment_3/main.R')
debugSource('C:/Users/bhunkeler/OneDrive/Dokumente/Coursera_Courses/Data Science/002_R Programming/Week 4/Assignment_3/main.R')
as.numeric(fData[, col])
which.min(fData[, col])
fData[, col] <- as.numeric(fData[, col])
Hospital.Name[which.min(fData[, col])]
with(fData, Hospital.Name[which.min(fData[, col])])
statehospitals <- as.numeric(statehospitals[, col])
statehospitals <- as.numeric(col)
statehospitals
debugSource('C:/Users/bhunkeler/OneDrive/Dokumente/Coursera_Courses/Data Science/002_R Programming/Week 4/Assignment_3/main.R')
statehospitals <- as.numeric(col)
debugSource('C:/Users/bhunkeler/OneDrive/Dokumente/Coursera_Courses/Data Science/002_R Programming/Week 4/Assignment_3/main.R')
debugSource('C:/Users/bhunkeler/OneDrive/Dokumente/Coursera_Courses/Data Science/002_R Programming/Week 4/Assignment_3/main.R')
debugSource('C:/Users/bhunkeler/OneDrive/Dokumente/Coursera_Courses/Data Science/002_R Programming/Week 4/Assignment_3/main.R')
debugSource('C:/Users/bhunkeler/OneDrive/Dokumente/Coursera_Courses/Data Science/002_R Programming/Week 4/Assignment_3/main.R')
debugSource('C:/Users/bhunkeler/OneDrive/Dokumente/Coursera_Courses/Data Science/002_R Programming/Week 4/Assignment_3/main.R')
debugSource('C:/Users/bhunkeler/OneDrive/Dokumente/Coursera_Courses/Data Science/002_R Programming/Week 4/Assignment_3/main.R')
validOutcomes = list("heart attack" = "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack",
"heart failure" = "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure",
"pneumonia" = "Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia")
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
outcome <- "heart attack"
!(length(outcome) == 1 && outcome %in% names(validOutcome))
!(length(outcome) == 1 && outcome %in% names(validOutcomes))
outcome <- "heart attac"
!(length(outcome) == 1 && outcome %in% names(validOutcomes))
outcome <- ""
!(length(outcome) == 1 && outcome %in% names(validOutcomes))
debugSource('C:/Users/bhunkeler/OneDrive/Dokumente/Coursera_Courses/Data Science/002_R Programming/Week 4/Assignment_3/main.R')
class(fData)
class(statehospitals)
as.numeric(data[,"rate"])
col <- statehospitals$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack
as.numeric(data[,col], na.rm = TRUE)
as.numeric(data[,col], na.rm = TRUE)
data[,col]
data[,11]
data[,"Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"]
as.numeric(data[,"Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"], na.rm = TRUE)
as.numeric(data[,"Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"], na.rm = FALSE)
subset(data, data[,"Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"], na.rm = FALSE)
statehospitals <- statehospitals[!is.na(statehospitals$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack),]
debugSource('C:/Users/bhunkeler/OneDrive/Dokumente/Coursera_Courses/Data Science/002_R Programming/Week 4/Assignment_3/main.R')
debugSource('C:/Users/bhunkeler/OneDrive/Dokumente/Coursera_Courses/Data Science/002_R Programming/Week 4/Assignment_3/main.R')
statehospitals1 <- statehospitals[!is.na(statehospitals$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack),]
debugSource('C:/Users/bhunkeler/OneDrive/Dokumente/Coursera_Courses/Data Science/002_R Programming/Week 4/Assignment_3/main.R')
a <- statehospitals$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack
a <- statehospitals[statehospitals$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack]
library(swirl)
swirl()
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
?sapply
cls_vect <- sapply(flags, class)
class(cls_vect)
play()
flags
nxt()
sum(flags$orange)
flag_colors <- flags[, 11:17]
flag_colors
head(flag_colors)
lapply(flags, sum)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
lapply(flags, unique)
unique_vals <- lapply(flags, unique)
unique_vals
lapply(unique_vals, length)
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
debugSource('C:/Users/bhunkeler/OneDrive/Dokumente/Coursera_Courses/Data Science/002_R Programming/Week 4/Assignment_3/main.R')
debugSource('C:/Users/bhunkeler/OneDrive/Dokumente/Coursera_Courses/Data Science/002_R Programming/Week 4/Assignment_3/main.R')
col
data1 <- subset(statehospitals, State %in% state, select = c("Hospital.Name", validOutcomes[[outcome]]))
View(data1)
debugSource('C:/Users/bhunkeler/OneDrive/Dokumente/Coursera_Courses/Data Science/002_R Programming/Week 4/Assignment_3/main.R')
debugSource('C:/Users/bhunkeler/OneDrive/Dokumente/Coursera_Courses/Data Science/002_R Programming/Week 4/Assignment_3/main.R')
View(statehospitals)
good <- complete.case(statehospitals)
good <- complete.cases(statehospitals)
good
statehospitals
as.numeric(statehospitals[, 2])
hops <- statehospitals
hops[, 2] <- as.numeric(hops[, 2])
hops
good <- complete.cases(hops)
good
hops1 <- hops[good, ]
View(hops1)
min(hosp1[, 2])
min(hops1[, 2])
hosp1
View(hops1)
hops1$Hospital.Name
debugSource('C:/Users/bhunkeler/OneDrive/Dokumente/Coursera_Courses/Data Science/002_R Programming/Week 4/Assignment_3/main.R')
min(statehospitals[, 2])
min(statehospitals[, 2])
statehospitals[ min(statehospitals[, 2]) == TRUE, ]
Hospital.Name[which.min(statehospitals[, 2])
with(statehospitals, Hospital.Name[which.min(statehospitals[, 2])])
debugSource('C:/Users/bhunkeler/OneDrive/Dokumente/Coursera_Courses/Data Science/002_R Programming/Week 4/Assignment_3/main.R')
debugSource('C:/Users/bhunkeler/OneDrive/Dokumente/Coursera_Courses/Data Science/002_R Programming/Week 4/Assignment_3/main.R')
debugSource('C:/Users/bhunkeler/OneDrive/Dokumente/Coursera_Courses/Data Science/002_R Programming/Week 4/Assignment_3/main.R')
debugSource('C:/Users/bhunkeler/OneDrive/Dokumente/Coursera_Courses/Data Science/002_R Programming/Week 4/Assignment_3/main.R')
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript3.R")
submit()
submit()
submit()
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")  data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
View(data)
View(data)
data
state <- "TX"
statehospitals <- data[ (data$State == state) == TRUE, ]
statehospitals <- subset(statehospitals, State %in% state, select = c("Hospital.Name", validOutcomes[[outcome]]))
validOutcomes = list("heart attack" = "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack",
"heart failure" = "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure",
"pneumonia" = "Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia")
statehospitals <- subset(statehospitals, State %in% state, select = c("Hospital.Name", validOutcomes[[outcome]]))
outcome <- "heart failure"
statehospitals <- subset(statehospitals, State %in% state, select = c("Hospital.Name", validOutcomes[[outcome]]))
View(statehospitals)
hosp <- statehospitals[order(statehospitals[2]),]
View(hosp)
statehospitals[, 2] <- as.numeric(statehospitals[, 2])
good <- complete.cases(statehospitals)
statehospitals <- statehospitals[complete.cases(statehospitals), ]
hosp <- statehospitals[order(statehospitals[2], decreasing = TRUE),]
hosp <- statehospitals[order(statehospitals[2], decreasing = FALSE),]
hosp[5, ]
with(statehospitals, Hospital.Name[statehospitals[5, ])])
with(statehospitals, Hospital.Name[statehospitals[5, ]])
statehospitals$Hospital.Name[5, ]
statehospitals$Hospital.Name[5,]
Hospital.Name[statehospitals[5,]]
statehospitals[5,]
a <- statehospitals[5,]
a$Hospital.Name
statehospitals[5,]$Hospital.Name
statehospitals <- statehospitals[order(statehospitals[2], decreasing = TRUE),]
statehospitals <- statehospitals[order(statehospitals[2], decreasing = FALSE),]
View(statehospitals)
statehospitals[5,]$Hospital.Name
statehospitals <- names("Hospital.Name", "Rate")
names(statehospitals) <- c("Hospital.Name", "Rate")
statehospitals[with(statehospitals, order(statehospitals$Hospital.Name, statehospitals$Rate)), ]
hosp <- statehospitals[with(statehospitals, order(statehospitals$Hospital.Name, statehospitals$Rate)), ]
View(hosp)
hosp <- order(statehospitals$Rate)
hosp <- statehospitals[with(statehospitals, order(statehospitals$Hospital.Name, statehospitals$Rate)), ]
View(hosp)
statehospitals$Rate
hosp <- statehospitals[order(statehospitals$Hospital.Name, statehospitals$Rate), ]
hosp1 <- statehospitals[order(statehospitals$Hospital.Name, statehospitals$Rate), ]
hosp2 <- statehospitals[order(statehospitals[, 1], statehospitals[,2]), ]
View(hosp2)
hosp1 <- statehospitals[order(statehospitals$Hospital.Name, decreasing = FALSE), ]
View(hosp1)
hosp2 <- hosp1[order(hosp1$Rate, decreasing = FALSE), ]
hosp3 <- statehospitals[order(statehospitals[,"Hospital.Name"],-statehospitals[,"Rate"]),]
View(hosp3)
hosp3 <- statehospitals[order(statehospitals[,"Hospital.Name"],statehospitals[,"Rate"]),]
?runif
x <- list(a = matrix(1:4, 2, 2), b = matrix(1:3, 3, 2))
lapply(x, function(elt) elt[, 1])
lapply(x, function(fdi) fdi[, 1])
?apply
a <- array(rnorm(2 * 2 * 10), c(2,2,10))
apply(a, c(1,2), mean)
a
apply(a, c(1,2), mean)
apply(a, 1, mean)
apply(a, c(1,2), mean)
apply(a, 2, mean)
apply(a, c(1,2), mean)
a <- array(rnorm(2 * 2 * 10), c(2,2,10))
apply(a, c(1,2), mean)
mapply(1:4, 4, §)
mapply(1:4, 4, 1)
mapply(rep, 1:4, 4, 1)
mapply(rep, 1:4, 4:1)
mapply(rep, 1:4)
mapply(rep, 1:4, 5:2)
log(-1)
mean(y)
traceback()
lm(x ~ y)
traceback()
debug(lm)
lm
library(datasets)
data(iris)
iris
spec <- iris[ (iris$Species == "state"virginica") == TRUE, ]
spec <- iris[ (iris$Species == "virginica") == TRUE, ]
View(spec)
sapply(spec, mean)
apply(iris, 1, mean)
apply(iris, 2, mean)
rowMeans(iris[, 1:4])
apply(iris[, 1:4], 2, mean)
library(datasets)
data(mtcars)
cars <- mtcars
View(cars)
tapply(mtcars$mpg, mtcars$cyl, mean)
sapply(mtcars, cyl, mean)
lapply(mtcars, mean)
mean(mtcars$mpg, mtcars$cyl)
v4 <- mtcars[ (mtcars$cyl == "4") == TRUE, ]
v8 <- mtcars[ (mtcars$cyl == "8") == TRUE, ]
View(v4)
v4mhp <- lapply(mtcars$hp, mean)
v4mhp <- lapply(v4$hp, mean)
lapply(v4$hp, mean)
lapply(v4, mean)
sapply(v4, mean)
v4mhp <- sapply(v4, mean)
v4mhp$hp
v4mhp
v4mhp[4]
v8mhp <- sapply(v8, mean)
v8mhp
v8mhp - v4mhp
v8mhp[4] - v4mhp[4]
abs(v8mhp[4] - v4mhp[4])
debug(ls)
ls
debug(ls)
ls()
library(swirl)
library(swirl)
q
q
library(swirl)
library(swirl)
